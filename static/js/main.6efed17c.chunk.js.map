{"version":3,"sources":["components/MovieItem.js","components/MovieList.js","components/MovieListWillWatch.js","components/MovieTabs.js","components/Pagination.js","App.js","utils/api.js","serviceWorker.js","index.js"],"names":["MovieItem","props","getClassValue","value","classNames","state","willWatch","handleMovieForWatchList","bind","this","RemoveMovieFromWillWatch","movie","AddMovieToWillWatch","setState","className","style","width","height","src","backdrop_path","poster_path","alt","title","vote_average","type","onClick","React","Component","MovieList","movieslist","f","map","item","i","key","id","MovieListWillWatch","wishlist","length","MovieTabs","nextProps","nextState","sort_by","updateSortBy","sort_arr","split","handleClick","event","target","getSortValue","getClassLink","sort","replace","getTextValue","reg","RegExp","val","join","test","Pagination","pages","page","min","max","range","firstpage","arr","push","hendlerClick","updatePage","hendlerClassValue","aria-label","filter","fv","v","App","getMovies","fetch","then","response","json","data","total_pages","movies","results","catch","err","console","error","stack","val_arr","vl","first","moviesWillWatch","removeMovie","prevProps","prevState","m","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6efed17c.chunk.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n\nclass MovieItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      willWatch: false\n    };\n    this.handleMovieForWatchList = this.handleMovieForWatchList.bind(this);\n  }\n\n  getClassValue = value => {\n    return classNames({\n      \"col btn btn-info\": this.state.willWatch,\n      \"col btn btn-secondary\": !this.state.willWatch\n    });\n  };\n\n  handleMovieForWatchList() {\n    this.state.willWatch\n      ? this.props.RemoveMovieFromWillWatch(this.props.movie)\n      : this.props.AddMovieToWillWatch(this.props.movie);\n    this.setState({ willWatch: !this.state.willWatch });\n  }\n\n  render() {\n    const { movie } = this.props;\n    return (\n      <div className=\"card mb-4\" style={{ width: \"300px\", height: \"300px\" }}>\n        <img\n          style={{ width: \"300px\", height: \"165px\" }}\n          className=\"card-img-top\"\n          src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path ||\n            movie.poster_path}`}\n          alt={movie.title}\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{movie.title}</h5>\n        </div>\n\n        <div className=\"card-footer bg-0\">\n          <div className=\"row\">\n            <p className=\"col card-text\">{movie.vote_average}</p>\n            <button\n              type=\"button\"\n              className={this.getClassValue()}\n              onClick={this.handleMovieForWatchList}\n            >\n              {this.state.willWatch ? \"Will Not Watch\" : \"Will Watch\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default MovieItem;\n","import React from \"react\";\nimport MovieItem from \"./MovieItem\";\n\nconst MovieList = props => {\n  const {\n    movieslist,\n    AddMovieToWillWatch = f => f,\n    RemoveMovieFromWillWatch = f => f\n  } = props;\n  return (\n    <div className=\"row\">\n      {movieslist.map((item, i) => (\n        <div className=\" col-3\" key={item.id}>\n          <MovieItem\n            movie={item}\n            AddMovieToWillWatch={AddMovieToWillWatch}\n            RemoveMovieFromWillWatch={RemoveMovieFromWillWatch}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MovieList;\n","import React from \"react\";\n\nconst MovieListWillWatch = ({ wishlist }) => {\n  return (\n    <div className=\"\">\n      <h5>Will Watch {wishlist.length}</h5>\n      <ul className=\"list-group\">\n        {wishlist.length > 0\n          ? wishlist.map((movie, i) => (\n              <li\n                key={movie.id}\n                className=\"list-group-item row justify-content-center\"\n              >\n                <div className=\"d-flex justify-content-between\">\n                  <div className=\"\">{movie.title}</div>\n                  <div className=\"\">{movie.vote_average}</div>\n                </div>\n              </li>\n            ))\n          : null}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieListWillWatch;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nclass MovieTabs extends React.Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.sort_by !== this.props.sort_by) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    //console.log(\"this.props.sort_by: \" + this.props.sort_by);\n    const { sort_by, updateSortBy } = this.props;\n    let sort_arr = sort_by.split(\".\");\n\n    const handleClick = event => {\n      updateSortBy(event.target.value);\n    };\n\n    const getSortValue = value => {\n      return sort_arr[0] === `${value}`\n        ? sort_arr[1] === \"asc\"\n          ? `${value}.asc`\n          : `${value}.desc`\n        : `${value}.desc`;\n    };\n\n    const getClassLink = value => {\n      let sort = this.props.sort_by.replace(/^(\\w+)\\.(\\w+)$/, \"$1\");\n      //console.log(\"sort...\" + sort);\n      return classNames({\n        \"btn btn-light mr-2 active\": sort === value,\n        \"btn btn-light mr-2\": sort !== value\n      });\n    };\n\n    const getTextValue = value => {\n      let reg = new RegExp(value, \"i\");\n      let val = value.split(\"_\").join(\" \");\n      return reg.test(sort_arr[0])\n        ? sort_arr[1] === \"desc\"\n          ? `${val} desc`\n          : `${val} asc`\n        : `${val} desc`;\n    };\n\n    return (\n      <ul className=\"tabs nav nav-pills\">\n        <li className=\"nav-item\">\n          <button\n            className={getClassLink(\"popularity\")}\n            onClick={handleClick}\n            value={getSortValue(\"popularity\")}\n          >\n            {getTextValue(\"Popularity\")}\n          </button>\n        </li>\n        <li className=\"nav-item\">\n          <button\n            className={getClassLink(\"revenue\")}\n            onClick={handleClick}\n            value={getSortValue(\"revenue\")}\n          >\n            {getTextValue(\"Revenue\")}\n          </button>\n        </li>\n        <li className=\"nav-item\">\n          <button\n            className={getClassLink(\"vote_average\")}\n            onClick={handleClick}\n            value={getSortValue(\"vote_average\")}\n          >\n            {getTextValue(\"Vote_average\")}\n          </button>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default MovieTabs;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst Pagination = props => {\n  const { page, min, max, range, firstpage } = props.pages;\n  let arr = [];\n  //console.log(props.pages);\n\n  for (let i = firstpage; i < firstpage + range; i++) {\n    arr.push(i);\n  }\n\n  const hendlerClick = value => () => {\n    if (value > max) {\n      value = max;\n    } else if (value < min) {\n      value = min;\n    }\n\n    props.updatePage(value);\n  };\n\n  const hendlerClassValue = value => {\n    return classNames({\n      \"page-item active\": page === value,\n      \"page-item\": page !== value && value !== \"next\" && value !== \"prev\",\n      \"page-item disabled\": value === \"prev\" && page === 1,\n      \"page-item m-0\": value === \"prev\" && page > 1,\n      \"page-item disabled m-0\": value === \"next\" && page === max,\n      \"page-item mb-0\": value === \"next\" && page < max\n    });\n  };\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      {min !== max ? (\n        <ul className=\"pagination\">\n          <li className={hendlerClassValue(\"prev\")}>\n            <div className=\"page-link\" onClick={hendlerClick(page - 1)}>\n              Previous\n            </div>\n          </li>\n          <li className={hendlerClassValue(1)}>\n            <div className=\"page-link\" onClick={hendlerClick(1)}>\n              1\n            </div>\n          </li>\n          {firstpage > 2 ? (\n            <li className=\"page-item\">\n              <div className=\"page-link\">...</div>\n            </li>\n          ) : null}\n          {arr\n            .filter(fv => fv < max)\n            .map((v, i) => (\n              <li className={hendlerClassValue(v)} key={v}>\n                <div className=\"page-link\" onClick={hendlerClick(v)}>\n                  {v}\n                </div>\n              </li>\n            ))}\n\n          {firstpage + range < max ? (\n            <li className=\"page-item\">\n              <div className=\"page-link\">...</div>\n            </li>\n          ) : null}\n          <li className={hendlerClassValue(max)}>\n            <div className=\"page-link\" onClick={hendlerClick(max)}>\n              {max}\n            </div>\n          </li>\n          <li className={hendlerClassValue(\"next\")}>\n            <div className=\"page-link\" onClick={hendlerClick(page + 1)}>\n              Next\n            </div>\n          </li>\n        </ul>\n      ) : null}\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport MovieList from \"./components/MovieList\";\nimport MovieListWillWatch from \"./components/MovieListWillWatch\";\nimport MovieTabs from \"./components/MovieTabs\";\nimport Pagination from \"./components/Pagination\";\nimport { API_URL, API_KEY_3 } from \"./utils/api\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      moviesWillWatch: [],\n      sort_by: \"popularity.desc\",\n      pages: {\n        page: 1,\n        firstpage: 2,\n        min: 1,\n        max: 1,\n        range: 9\n      }\n    };\n    this.AddMovieToWillWatch = this.AddMovieToWillWatch.bind(this);\n    this.removeMovie = this.removeMovie.bind(this);\n    this.RemoveMovieFromWillWatch = this.RemoveMovieFromWillWatch.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.sort_by !== this.state.sort_by) {\n      this.getMovies();\n    } else if (prevState.pages.page !== this.state.pages.page) {\n      this.getMovies();\n    }\n  }\n\n  getMovies = () => {\n    fetch(\n      `${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${\n        this.state.sort_by\n      }&page=${this.state.pages.page}`\n    )\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          pages: { ...this.state.pages, max: data.total_pages },\n          movies: data.results\n        })\n      ).catch(err=>console.error('Error getting API data', err.stack));\n  };\n\n  AddMovieToWillWatch(movie) {\n    this.setState((prevState, props) => ({\n      moviesWillWatch: [...prevState.moviesWillWatch, movie]\n    }));\n  }\n\n  RemoveMovieFromWillWatch(movie) {\n    this.setState((prevState, props) => ({\n      moviesWillWatch: prevState.moviesWillWatch.filter(m => m.id !== movie.id)\n    }));\n  }\n\n  removeMovie(id) {\n    this.setState((prevState, props) => ({\n      movies: prevState.movies.filter(m => m.id !== id)\n    }));\n  }\n\n  updateSortBy = value => {\n    let sort_arr = this.state.sort_by.split(\".\");\n    let val_arr = value.split(\".\");\n    let vl = value;\n\n    if (sort_arr[0] === val_arr[0]) {\n      vl = val_arr[1] === \"desc\" ? `${val_arr[0]}.asc` : `${val_arr[0]}.desc`;\n    }\n    this.setState({ sort_by: vl });\n  };\n\n  updatePage = value => {\n    let first;\n    let { min, max, range, firstpage } = this.state.pages;\n    if (value >= min && value <= max && min !== max) {\n      if (value === min) {\n        first = min + 1;\n      } else if (value === max) {\n        first = max - range > min + 1 ? max - range : 0;\n      } else {\n        if (value > firstpage) {\n          first = firstpage + range <= value ? firstpage + 9 : 0;\n        } else if (value < firstpage) {\n          first = firstpage - 9;\n        } else {\n          first = 0;\n        }\n      }\n    }\n    //console.log(\"first\", first);\n    first\n      ? this.setState({\n          pages: { ...this.state.pages, firstpage: first, page: value }\n        })\n      : this.setState({ pages: { ...this.state.pages, page: value } });\n  };\n\n  render() {\n    return (\n      <div className=\"d-flex justify-content-center flex-row mb-3\">\n        <div className=\"p-2 w-75\">\n          <div className=\"mb-4\">\n            <Pagination pages={this.state.pages} updatePage={this.updatePage} />\n          </div>\n          <div className=\"mb-4\">\n            <MovieTabs\n              sort_by={this.state.sort_by}\n              updateSortBy={this.updateSortBy}\n            />\n          </div>\n          <MovieList\n            movieslist={this.state.movies}\n            AddMovieToWillWatch={this.AddMovieToWillWatch}\n            RemoveMovieFromWillWatch={this.RemoveMovieFromWillWatch}\n          />\n        </div>\n        <div className=\"p-2\">\n          <MovieListWillWatch wishlist={this.state.moviesWillWatch} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const API_URL = \"https://api.themoviedb.org/3\";\n\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\n\nexport const API_KEY_4 =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}