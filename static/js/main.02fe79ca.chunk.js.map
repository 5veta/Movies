{"version":3,"sources":["components/MovieItem.js","components/MovieList.js","components/MovieListWillWatch.js","components/MovieTabs.js","components/Pagination.js","utils/api.js","components/Home.js","components/MovieInfo.js","components/Cast.js","components/Video.js","components/MovieDetails.js","components/Menu.js","App.js","serviceWorker.js","index.js"],"names":["MovieItem","props","getClassValue","value","classNames","state","willWatch","handleMovieForWatchList","bind","this","removeMovieFromWillWatch","movie","addMovieToWillWatch","setState","history","className","style","width","height","src","backdrop_path","poster_path","alt","title","onClick","push","id","vote_average","type","React","Component","MovieList","movieslist","f","map","item","i","key","MovieListWillWatch","wishlist","length","console","log","handlerRemoveMovieFromWillWatch","MovieTabs","handleClick","event","sortby","updateSortBy","target","innerHTML","toLowerCase","replace","getClassLink","sort","sort_by","split","nextProps","nextState","Pagination","pages","page","max","hendlerClick","getPage","updatePage","hendlerClassValue","aria-label","range","first","list","size","rest","int","parseInt","patsOfPagination","y","getPageList","filter","fv","v","API_KEY_3","Home","getMovies","fetch","then","response","json","data","total_pages","movies","results","catch","err","error","stack","val_arr","vl","moviesWillWatch","removeMovie","prevProps","prevState","m","MovieInfo","year","release_date","genres","obj","name","runtime","spoken_languages","production_countries","overview","Cast","credits","crew","cast","profile_path","Video","video","allowFullScreen","MovieDetails","useState","match","params","setMovie","setCredits","setVideo","useEffect","Menu","href","window","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"oUA6DeA,E,kDAzDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,cAAgB,SAAAC,GACd,OAAOC,IAAW,CAChB,mBAAoB,EAAKC,MAAMC,UAC/B,yBAA0B,EAAKD,MAAMC,aATvC,EAAKD,MAAQ,CACXC,WAAW,GAEb,EAAKC,wBAA0B,EAAKA,wBAAwBC,KAA7B,gBALd,E,sEAgBjBC,KAAKJ,MAAMC,UACPG,KAAKR,MAAMS,yBAAyBD,KAAKR,MAAMU,OAC/CF,KAAKR,MAAMW,oBAAoBH,KAAKR,MAAMU,OAC9CF,KAAKI,SAAS,CAAEP,WAAYG,KAAKJ,MAAMC,c,+BAG/B,IAAD,EACkBG,KAAKR,MAAxBU,EADC,EACDA,MAAOG,EADN,EACMA,QAEb,OACE,yBAAKC,UAAU,YAAYC,MAAO,CAAEC,MAAO,QAASC,OAAQ,UAC1D,yBACEF,MAAO,CAAEC,MAAO,QAASC,OAAQ,SACjCH,UAAU,eACVI,IAAG,yCAAoCR,EAAMS,eAC3CT,EAAMU,aACRC,IAAKX,EAAMY,QAEb,yBAAKR,UAAU,aACb,yBAAKS,QAAS,kBAAMV,EAAQW,KAAR,WAAiBd,EAAMe,OACzC,wBAAIX,UAAU,cAAcJ,EAAMY,SAItC,yBAAKR,UAAU,oBACb,yBAAKA,UAAU,OACb,uBAAGA,UAAU,iBAAiBJ,EAAMgB,cACpC,4BACEC,KAAK,SACLb,UAAWN,KAAKP,gBAChBsB,QAASf,KAAKF,yBAEbE,KAAKJ,MAAMC,UAAY,iBAAmB,qB,GAjDjCuB,IAAMC,WCuBfC,EAvBG,SAAA9B,GAAU,IAExB+B,EAIE/B,EAJF+B,WAFuB,EAMrB/B,EAHFW,2BAHuB,MAGD,SAAAqB,GAAC,OAAIA,GAHJ,IAMrBhC,EAFFS,gCAJuB,MAII,SAAAuB,GAAC,OAAIA,GAJT,EAKvBnB,EACEb,EADFa,QAEF,OACE,yBAAKC,UAAU,OACZiB,EAAWE,KAAI,SAACC,EAAMC,GAAP,OACd,yBAAKrB,UAAU,6BAA6BsB,IAAKF,EAAKT,IACpD,kBAAC,EAAD,CACEf,MAAOwB,EACPvB,oBAAqBA,EACrBF,yBAA0BA,EAC1BI,QAASA,UCmBNwB,EAnCY,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAAU7B,EAA+B,EAA/BA,yBAOtC,OACE,yBAAKK,UAAU,IACb,0CAAgBwB,EAASC,QACzB,wBAAIzB,UAAU,cACXwB,EAASC,OAAS,EACfD,EAASL,KAAI,SAACvB,EAAOyB,GAAR,OACX,wBACEC,IAAK1B,EAAMe,GACXX,UAAU,8CAEV,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,IAAIJ,EAAMY,OACzB,yBAAKR,UAAU,IAAIJ,EAAMgB,cACzB,yBACEZ,UAAU,GACVS,QAAS,kBArBa,SAAAb,GACtC8B,QAAQC,IAAI,SACZhC,EAAyBC,GACzB8B,QAAQC,IAAI/B,GAkBmBgC,CAAgChC,KAFjD,UASN,QCiCGiC,E,kDA5Db,WAAY3C,GAAQ,IAAD,8BACjB,cAAMA,IAYR4C,YAAc,SAAAC,GACZ,IAAIC,EAAS,EAAK9C,MAAM+C,aACtBF,EAAMG,OAAOC,UAAUC,cAAcC,QAAQ,KAAM,MAErDN,EAAMG,OAAOC,UAAYH,EAAOK,QAAQ,KAAM,MAjB7B,EAoBnBC,aAAe,SAAAlD,GACb,IAAImD,EAAO,EAAKrD,MAAMsD,QAAQC,MAAM,KACpC,OAAOpD,IAAW,CAChB,4BAA6BkD,EAAK,KAAOnD,EACzC,qBAAsBmD,EAAK,KAAOnD,KAtBpC,EAAK0C,YAAc,EAAKA,YAAYrC,KAAjB,gBACnB,EAAK6C,aAAe,EAAKA,aAAa7C,KAAlB,gBAHH,E,kEAMGiD,EAAWC,GAC/B,OAAID,EAAUF,UAAY9C,KAAKR,MAAMsD,U,+BAsBrC,OACE,wBAAIxC,UAAU,sBACZ,wBAAIA,UAAU,YACZ,4BACEA,UAAWN,KAAK4C,aAAa,cAC7B7B,QAASf,KAAKoC,aAFhB,oBAOF,wBAAI9B,UAAU,YACZ,4BACEA,UAAWN,KAAK4C,aAAa,WAC7B7B,QAASf,KAAKoC,aAFhB,iBAOF,wBAAI9B,UAAU,YACZ,4BACEA,UAAWN,KAAK4C,aAAa,gBAC7B7B,QAASf,KAAKoC,aAFhB,oB,GAjDchB,IAAMC,WCyGf6B,EAzGI,SAAA1D,GAAU,IAAD,EACJA,EAAM2D,MAApBC,EADkB,EAClBA,KAAMC,EADY,EACZA,IAuCRC,EAAe,SAAA5D,GAAK,OAAI,WAC5B,IAAM0D,EAVQ,SAAA1D,GACd,OAAIA,EAAQ2D,EACHA,EACE3D,EAhCD,IAmCHA,EAIM6D,CAAQ7D,GACrBF,EAAMgE,WAAWJ,KAGbK,EAAoB,SAAA/D,GACxB,OAAOC,IAAW,CAChB,mBAAoByD,IAAS1D,EAC7B,YAAa0D,IAAS1D,EACtB,qBACa,SAAVA,GAAoB0D,IAASC,GAAgB,IAATD,GAC1B,SAAV1D,GAA6B,IAAT0D,GAAcA,IAASC,KAIlD,OACE,yBAAKK,aAAW,2BAtDN,IAuDCL,EACP,wBAAI/C,UAAU,cACZ,wBAAIA,UAAWmD,EAAkB,SAC/B,yBAAKnD,UAAU,YAAYS,QAASuC,EAAaF,EAAO,IAAxD,aAIF,wBAAI9C,UAAWmD,EAAkB,IAC/B,yBAAKnD,UAAU,YAAYS,QAASuC,EAAa,IAAjD,MAIDF,EAAOO,GACN,wBAAIrD,UAAU,aACZ,yBAAKA,UAAU,aAAf,QAEA,KA9DQ,WAMlB,IALA,IAEIsD,EAFAC,EAAO,GACPnC,EAAO,EAEPoC,EAVmB,WACvB,IAAIC,EAAOV,EAHC,EAIRW,EAAMC,SAASZ,EAJP,EAIqBU,EAAM,IACvC,OAAOA,EAAOC,EAAMD,EAAOC,EAOhBE,GAEFvC,EAAI,EAAGA,GAAKmC,EAAMnC,IAAK,CAC9B,IAAK,IAAIwC,EAAI,EAAGA,EAfN,EAeiBA,IACf,IAANA,IAASP,EAAQlC,IAChB0B,EAAOQ,EAjBJ,GAiBqBR,GAAQQ,GAAmB,IAATR,IAC7CS,EAAK7C,KAAKU,GAEZA,IAEF,GAAImC,EAAK9B,OACP,OAAO8B,GAgDJO,GACEC,QAAO,SAAAC,GAAE,OAAIA,EAAKjB,KAClB5B,KAAI,SAAC8C,EAAG5C,GAAJ,OACH,wBAAIrB,UAAWmD,EAAkBc,GAAI3C,IAAK2C,GACxC,yBAAKjE,UAAU,YAAYS,QAASuC,EAAaiB,IAC9CA,OAKRnB,EAjFK,EAiFUC,EACd,wBAAI/C,UAAU,aACZ,yBAAKA,UAAU,aAAf,QAEA,KACJ,wBAAIA,UAAWmD,EAAkBJ,IAC/B,yBAAK/C,UAAU,YAAYS,QAASuC,EAAaD,IAC9CA,IAGL,wBAAI/C,UAAWmD,EAAkB,SAC/B,yBAAKnD,UAAU,YAAYS,QAASuC,EAAaF,EAAO,IAAxD,UAKF,OCrGGoB,EAAY,mCCuHVC,E,kDAjHb,WAAYjF,GAAQ,IAAD,8BACjB,cAAMA,IA2BRkF,UAAY,WACVC,MAAM,GAAD,ODrCc,+BCqCd,mCACkCH,EADlC,oBAED,EAAK5E,MAAMkD,QAFV,iBAGM,EAAKlD,MAAMuD,MAAMC,OAEzBwB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OACR,EAAK3E,SAAS,CACZ+C,MAAM,eAAM,EAAKvD,MAAMuD,MAAlB,CAAyBE,IAAK0B,EAAKC,cACxCC,OAAQF,EAAKG,aAGhBC,OAAM,SAAAC,GAAG,OAAIpD,QAAQqD,MAAM,yBAA0BD,EAAIE,WAzC3C,EA8DnB/C,aAAe,SAAA7C,GACb,IAAI6F,EAAU7F,EAAMqD,MAAM,KACtByC,EAAoB,SAAfD,EAAQ,GAAR,UAA2BA,EAAQ,GAAnC,kBAAiDA,EAAQ,GAAzD,SAGT,OADA,EAAKnF,SAAS,CAAE0C,QAAS0C,IAClBA,GAnEU,EAsEnBhC,WAAa,SAAA9D,GACX,EAAKU,SAAS,CACZ+C,MAAM,eAAM,EAAKvD,MAAMuD,MAAlB,CAAyBC,KAAM1D,OAtEtC,EAAKE,MAAQ,CACXqF,OAAQ,GACRQ,gBAAiB,GACjB3C,QAAS,kBACTK,MAAO,CACLC,KAAM,EACNC,IAAK,IAGT,EAAKlD,oBAAsB,EAAKA,oBAAoBJ,KAAzB,gBAC3B,EAAK2F,YAAc,EAAKA,YAAY3F,KAAjB,gBACnB,EAAKE,yBAA2B,EAAKA,yBAAyBF,KAA9B,gBAbf,E,gEAiBjBC,KAAK0E,c,yCAGYiB,EAAWC,IACxBA,EAAU9C,UAAY9C,KAAKJ,MAAMkD,SAE1B8C,EAAUzC,MAAMC,OAASpD,KAAKJ,MAAMuD,MAAMC,OADnDpD,KAAK0E,c,0CAsBWxE,GAClBF,KAAKI,UAAS,SAACwF,EAAWpG,GAAZ,MAAuB,CACnCiG,gBAAgB,GAAD,mBAAMG,EAAUH,iBAAhB,CAAiCvF,U,+CAI3BA,GACvBF,KAAKI,UAAS,SAACwF,EAAWpG,GAAZ,MAAuB,CACnCiG,gBAAiBG,EAAUH,gBAAgBpB,QAAO,SAAAwB,GAAC,OAAIA,EAAE5E,KAAOf,EAAMe,Y,kCAI9DA,GACVjB,KAAKI,UAAS,SAACwF,EAAWpG,GAAZ,MAAuB,CACnCyF,OAAQW,EAAUX,OAAOZ,QAAO,SAAAwB,GAAC,OAAIA,EAAE5E,KAAOA,W,+BAmBhD,OACE,yBAAKX,UAAU,QACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CAAY6C,MAAOnD,KAAKJ,MAAMuD,MAAOK,WAAYxD,KAAKwD,eAG1D,yBAAKlD,UAAU,0CACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,CACEwC,QAAS9C,KAAKJ,MAAMkD,QACpBP,aAAcvC,KAAKuC,iBAIzB,yBAAKjC,UAAU,0CACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CACEiB,WAAYvB,KAAKJ,MAAMqF,OACvB9E,oBAAqBH,KAAKG,oBAC1BF,yBAA0BD,KAAKC,yBAC/BI,QAASL,KAAKR,MAAMa,WAGxB,yBAAKC,UAAU,cACb,kBAAC,EAAD,CACEwB,SAAU9B,KAAKJ,MAAM6F,gBACrBxF,yBAA0BD,KAAKC,kC,GAzG1BmB,IAAMC,W,QCsDVyE,EA3DG,SAAAtG,GAChB,IAAIuG,EAAOvG,EAAMU,MAAM8F,aACnBxG,EAAMU,MAAM8F,aAAajD,MAAM,KAAK,GACpC,KACJ,OACE,yBAAKzC,UAAU,kBACb,yBAAKA,UAAU,UACb,yBACEI,IAAG,yCAAoClB,EAAMU,MAAMU,aACnDN,UAAU,0BACVO,IAAI,SAGR,yBAAKP,UAAU,oBACb,yBAAKA,UAAU,aACb,6BACE,wBAAIA,UAAU,cACZ,2BAAId,EAAMU,MAAMY,OAChB,mCAASiF,EAAT,MAEF,2BACGvG,EAAMU,MAAM+F,OACTzG,EAAMU,MAAM+F,OAAOxE,KAAI,SAAAyE,GAAG,OACxB,0BAAMtE,IAAKsE,EAAIjF,IAAKiF,EAAIC,KAAxB,SAEF,KAEJ,kCAAQ3G,EAAMU,MAAMkG,QAApB,SAEF,2BACE,6CACC5G,EAAMU,MAAM+F,OACTzG,EAAMU,MAAMmG,iBAAiB5E,KAAI,SAACyE,EAAKvE,GAAN,OAC/B,0BAAMC,IAAKD,GAAIuE,EAAIC,KAAnB,QAEF,MAEN,2BACE,6CACC3G,EAAMU,MAAMoG,qBACT9G,EAAMU,MAAMoG,qBAAqB7E,KAAI,SAACyE,EAAKvE,GAAN,OACnC,0BAAMC,IAAKD,GAAIuE,EAAIC,KAAnB,QAEF,MAGN,2BACE,gDACC3G,EAAMU,MAAMgB,eAGjB,wBAAIZ,UAAU,cAAd,YACA,uBAAGA,UAAU,aAAad,EAAMU,MAAMqG,cCjCjCC,EAnBF,SAAAhH,GACX,OACE,wBAAIc,UAAU,oCACXd,EAAMiH,QAAQC,KACXlH,EAAMiH,QAAQE,KAAKlF,KAAI,SAAAyE,GAAG,OACxB,wBAAI5F,UAAU,uCAAuCsB,IAAKsE,EAAIjF,IAC5D,yBACEX,UAAU,qBACVI,IAAG,yCAAoCwF,EAAIU,cAC3C/F,IAAKqF,EAAIC,OAEX,2BAAID,EAAIC,UAGZ,OCDKU,EAbD,SAAArH,GACZ,OACE,yBAAKc,UAAU,2CACb,4BACEA,UAAU,wBACVI,IAAG,wCAAmClB,EAAMsH,MAAMlF,KAClDmF,iBAAe,EACfjG,MAAOtB,EAAMsH,MAAM7F,OCgEZ+F,EAnEM,SAAAxH,GAAU,IAAD,EACFyH,mBAAS,CAAEhG,GAAIzB,EAAM0H,MAAMC,OAAOlG,KADhC,mBACrBf,EADqB,KACdkH,EADc,OAEEH,mBAAS,IAFX,mBAErBR,EAFqB,KAEZY,EAFY,OAGFJ,mBAAS,IAHP,mBAGrBH,EAHqB,KAGdQ,EAHc,KA8C5B,OAzCAC,qBAAU,WACR5C,MAAM,sCAAD,OAAuCzE,EAAMe,GAA7C,oBAA2DuD,IAC7DI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJqC,EAASrC,MAEVI,OAAM,SAAAC,GAAG,OACRpD,QAAQqD,MAAM,oCAAqCD,EAAIE,YAE1D,CAACpF,IAEJqH,qBAAU,WACR5C,MAAM,sCAAD,OAEDzE,EAAMe,GAFL,4BAGiBuD,IAEnBI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJsC,EAAWtC,MAEZI,OAAM,SAAAC,GAAG,OACRpD,QAAQqD,MAAM,oCAAqCD,EAAIE,YAE1D,CAACmB,IAEJc,qBAAU,WACR5C,MAAM,sCAAD,OAEDzE,EAAMe,GAFL,2BAGgBuD,EAHhB,oBAKFI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJuC,EAASvC,EAAKG,QAAQ,OAEvBC,OAAM,SAAAC,GAAG,OACRpD,QAAQqD,MAAM,kCAAmCD,EAAIE,YAExD,CAACwB,IAGF,6BACE,yBAAKxG,UAAU,kEACb,yBAAKA,UAAU,2CACb,kBAAC,EAAD,CAAWJ,MAAOA,MAGtB,yBAAKI,UAAU,gDACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAAMmG,QAASA,MAGnB,yBAAKnG,UAAU,gDACb,yBAAKA,UAAU,SACb,kBAAC,EAAD,CAAOwG,MAAOA,QCpDTU,EAZF,WACX,OACE,yBAAKlH,UAAU,mDACb,yBAAKA,UAAU,gCACb,uBAAGA,UAAU,0BAA0BmH,KAAK,KAC1C,0CCDVC,OAAOtG,MAAQA,IAEf,IAUeuG,EAVH,kBACV,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrD,IACjC,kBAAC,IAAD,CAAOoD,KAAK,OAAOC,UAAWd,OCDhBe,QACW,cAA7BL,OAAOM,SAASC,UAEe,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASf,MACvB,2DCVNgB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7D,MAAK,SAAA8D,GACJA,EAAaC,gBAEdxD,OAAM,SAAAE,GACLrD,QAAQqD,MAAMA,EAAMuD,c","file":"static/js/main.02fe79ca.chunk.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n\nclass MovieItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      willWatch: false\n    };\n    this.handleMovieForWatchList = this.handleMovieForWatchList.bind(this);\n  }\n\n  getClassValue = value => {\n    return classNames({\n      \"col btn btn-info\": this.state.willWatch,\n      \"col btn btn-secondary\": !this.state.willWatch\n    });\n  };\n\n  handleMovieForWatchList() {\n    this.state.willWatch\n      ? this.props.removeMovieFromWillWatch(this.props.movie)\n      : this.props.addMovieToWillWatch(this.props.movie);\n    this.setState({ willWatch: !this.state.willWatch });\n  }\n\n  render() {\n    let { movie, history } = this.props;\n\n    return (\n      <div className=\"card mb-4\" style={{ width: \"300px\", height: \"300px\" }}>\n        <img\n          style={{ width: \"300px\", height: \"165px\" }}\n          className=\"card-img-top\"\n          src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path ||\n            movie.poster_path}`}\n          alt={movie.title}\n        />\n        <div className=\"card-body\">\n          <div onClick={() => history.push(`/${movie.id}`)}>\n            <h5 className=\"card-title\">{movie.title}</h5>\n          </div>\n        </div>\n\n        <div className=\"card-footer bg-0\">\n          <div className=\"row\">\n            <p className=\"col card-text\">{movie.vote_average}</p>\n            <button\n              type=\"button\"\n              className={this.getClassValue()}\n              onClick={this.handleMovieForWatchList}\n            >\n              {this.state.willWatch ? \"Will Not Watch\" : \"Will Watch\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieItem;\n","import React from \"react\";\nimport MovieItem from \"./MovieItem\";\n\nconst MovieList = props => {\n  const {\n    movieslist,\n    addMovieToWillWatch = f => f,\n    removeMovieFromWillWatch = f => f,\n    history\n  } = props;\n  return (\n    <div className=\"row\">\n      {movieslist.map((item, i) => (\n        <div className=\" col-10 col-sm-10 col-md-4\" key={item.id}>\n          <MovieItem\n            movie={item}\n            addMovieToWillWatch={addMovieToWillWatch}\n            removeMovieFromWillWatch={removeMovieFromWillWatch}\n            history={history}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MovieList;\n","import React from \"react\";\n\nconst MovieListWillWatch = ({ wishlist, removeMovieFromWillWatch }) => {\n  const handlerRemoveMovieFromWillWatch = movie => {\n    console.log(\"hello\");\n    removeMovieFromWillWatch(movie);\n    console.log(movie);\n  };\n\n  return (\n    <div className=\"\">\n      <h2>Will Watch {wishlist.length}</h2>\n      <ul className=\"list-group\">\n        {wishlist.length > 0\n          ? wishlist.map((movie, i) => (\n              <li\n                key={movie.id}\n                className=\"list-group-item row justify-content-center\"\n              >\n                <div className=\"d-flex justify-content-between\">\n                  <div className=\"\">{movie.title}</div>\n                  <div className=\"\">{movie.vote_average}</div>\n                  <div\n                    className=\"\"\n                    onClick={() => handlerRemoveMovieFromWillWatch(movie)}\n                  >\n                    x\n                  </div>\n                </div>\n              </li>\n            ))\n          : null}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieListWillWatch;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nclass MovieTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.getClassLink = this.getClassLink.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.sort_by !== this.props.sort_by) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClick = event => {\n    let sortby = this.props.updateSortBy(\n      event.target.innerHTML.toLowerCase().replace(/\\s/, \".\")\n    );\n    event.target.innerHTML = sortby.replace(/\\./, \" \");\n  };\n\n  getClassLink = value => {\n    let sort = this.props.sort_by.split(\".\");\n    return classNames({\n      \"btn btn-light mr-2 active\": sort[0] === value,\n      \"btn btn-light mr-2\": sort[0] !== value\n    });\n  };\n\n  render() {\n    return (\n      <ul className=\"tabs nav nav-pills\">\n        <li className=\"nav-item\">\n          <button\n            className={this.getClassLink(\"popularity\")}\n            onClick={this.handleClick}\n          >\n            popularity desc\n          </button>\n        </li>\n        <li className=\"nav-item\">\n          <button\n            className={this.getClassLink(\"revenue\")}\n            onClick={this.handleClick}\n          >\n            revenue desc\n          </button>\n        </li>\n        <li className=\"nav-item\">\n          <button\n            className={this.getClassLink(\"vote_average\")}\n            onClick={this.handleClick}\n          >\n            votes desc\n          </button>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default MovieTabs;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nconst Pagination = props => {\n  const { page, max } = props.pages;\n  const min = 1;\n  const range = 9;\n\n  const patsOfPagination = () => {\n    let rest = max % range;\n    let int = parseInt(max / range - rest, 10);\n    return rest ? int + rest : int;\n  };\n\n  const getPageList = () => {\n    let list = [];\n    let item = 2;\n    let first;\n    let size = patsOfPagination();\n\n    for (let i = 0; i <= size; i++) {\n      for (let y = 0; y < range; y++) {\n        if (y === 0) first = item;\n        if ((page < first + range && page >= first) || page === 1) {\n          list.push(item);\n        }\n        item++;\n      }\n      if (list.length) {\n        return list;\n      }\n    }\n  };\n\n  const getPage = value => {\n    if (value > max) {\n      return max;\n    } else if (value < min) {\n      return min;\n    }\n    return value;\n  };\n\n  const hendlerClick = value => () => {\n    const page = getPage(value);\n    props.updatePage(page);\n  };\n\n  const hendlerClassValue = value => {\n    return classNames({\n      \"page-item active\": page === value,\n      \"page-item\": page !== value,\n      \"page-item disabled\":\n        (value === \"next\" && page === max && page !== 1) ||\n        (value === \"prev\" && page === 1 && page !== max)\n    });\n  };\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      {min !== max ? (\n        <ul className=\"pagination\">\n          <li className={hendlerClassValue(\"prev\")}>\n            <div className=\"page-link\" onClick={hendlerClick(page - 1)}>\n              Previous\n            </div>\n          </li>\n          <li className={hendlerClassValue(1)}>\n            <div className=\"page-link\" onClick={hendlerClick(1)}>\n              1\n            </div>\n          </li>\n          {page > range + 1 ? (\n            <li className=\"page-item\">\n              <div className=\"page-link\">...</div>\n            </li>\n          ) : null}\n          {getPageList()\n            .filter(fv => fv < max)\n            .map((v, i) => (\n              <li className={hendlerClassValue(v)} key={v}>\n                <div className=\"page-link\" onClick={hendlerClick(v)}>\n                  {v}\n                </div>\n              </li>\n            ))}\n\n          {page + range < max ? (\n            <li className=\"page-item\">\n              <div className=\"page-link\">...</div>\n            </li>\n          ) : null}\n          <li className={hendlerClassValue(max)}>\n            <div className=\"page-link\" onClick={hendlerClick(max)}>\n              {max}\n            </div>\n          </li>\n          <li className={hendlerClassValue(\"next\")}>\n            <div className=\"page-link\" onClick={hendlerClick(page + 1)}>\n              Next\n            </div>\n          </li>\n        </ul>\n      ) : null}\n    </nav>\n  );\n};\n\nexport default Pagination;\n","export const API_URL = \"https://api.themoviedb.org/3\";\n\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\n\nexport const API_KEY_4 =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\n","import React from \"react\";\nimport MovieList from \"./MovieList\";\nimport MovieListWillWatch from \"./MovieListWillWatch\";\nimport MovieTabs from \"./MovieTabs\";\nimport Pagination from \"./Pagination\";\nimport { API_URL, API_KEY_3 } from \"../utils/api\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      moviesWillWatch: [],\n      sort_by: \"popularity.desc\",\n      pages: {\n        page: 1,\n        max: 1\n      }\n    };\n    this.addMovieToWillWatch = this.addMovieToWillWatch.bind(this);\n    this.removeMovie = this.removeMovie.bind(this);\n    this.removeMovieFromWillWatch = this.removeMovieFromWillWatch.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.sort_by !== this.state.sort_by) {\n      this.getMovies();\n    } else if (prevState.pages.page !== this.state.pages.page) {\n      this.getMovies();\n    }\n  }\n\n  getMovies = () => {\n    fetch(\n      `${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${\n        this.state.sort_by\n      }&page=${this.state.pages.page}`\n    )\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          pages: { ...this.state.pages, max: data.total_pages },\n          movies: data.results\n        })\n      )\n      .catch(err => console.error(\"Error getting API data\", err.stack));\n  };\n\n  addMovieToWillWatch(movie) {\n    this.setState((prevState, props) => ({\n      moviesWillWatch: [...prevState.moviesWillWatch, movie]\n    }));\n  }\n\n  removeMovieFromWillWatch(movie) {\n    this.setState((prevState, props) => ({\n      moviesWillWatch: prevState.moviesWillWatch.filter(m => m.id !== movie.id)\n    }));\n  }\n\n  removeMovie(id) {\n    this.setState((prevState, props) => ({\n      movies: prevState.movies.filter(m => m.id !== id)\n    }));\n  }\n\n  updateSortBy = value => {\n    let val_arr = value.split(\".\");\n    let vl = val_arr[1] === \"desc\" ? `${val_arr[0]}.asc` : `${val_arr[0]}.desc`;\n\n    this.setState({ sort_by: vl });\n    return vl;\n  };\n\n  updatePage = value => {\n    this.setState({\n      pages: { ...this.state.pages, page: value }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"mt-3\">\n        <div className=\"d-flex justify-content-center flex-row\">\n          <div className=\"mb-4 col-md-10\">\n            <Pagination pages={this.state.pages} updatePage={this.updatePage} />\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-center flex-row\">\n          <div className=\"mb-4 col-10\">\n            <MovieTabs\n              sort_by={this.state.sort_by}\n              updateSortBy={this.updateSortBy}\n            />\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-center flex-row\">\n          <div className=\"col-8 mr-2\">\n            <MovieList\n              movieslist={this.state.movies}\n              addMovieToWillWatch={this.addMovieToWillWatch}\n              removeMovieFromWillWatch={this.removeMovieFromWillWatch}\n              history={this.props.history}\n            />\n          </div>\n          <div className=\"px-2 col-2\">\n            <MovieListWillWatch\n              wishlist={this.state.moviesWillWatch}\n              removeMovieFromWillWatch={this.removeMovieFromWillWatch}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nconst MovieInfo = props => {\n  let year = props.movie.release_date\n    ? props.movie.release_date.split(\"-\")[0]\n    : null;\n  return (\n    <div className=\"row no-gutters\">\n      <div className=\"m-md-4\">\n        <img\n          src={`https://image.tmdb.org/t/p/w500${props.movie.poster_path}`}\n          className=\"card-img border rounded\"\n          alt=\"...\"\n        />\n      </div>\n      <div className=\"col-md-7 mx-md-4\">\n        <div className=\"card-body\">\n          <div>\n            <h1 className=\"card-title\">\n              <b>{props.movie.title}</b>\n              <span> ({year})</span>\n            </h1>\n            <p>\n              {props.movie.genres\n                ? props.movie.genres.map(obj => (\n                    <span key={obj.id}>{obj.name}, </span>\n                  ))\n                : null}\n\n              <span> {props.movie.runtime} min</span>\n            </p>\n            <p>\n              <span>Languages: </span>\n              {props.movie.genres\n                ? props.movie.spoken_languages.map((obj, i) => (\n                    <span key={i}>{obj.name} </span>\n                  ))\n                : null}\n            </p>\n            <p>\n              <span>Countries: </span>\n              {props.movie.production_countries\n                ? props.movie.production_countries.map((obj, i) => (\n                    <span key={i}>{obj.name} </span>\n                  ))\n                : null}\n            </p>\n\n            <p>\n              <span>Vote average: </span>\n              {props.movie.vote_average}\n            </p>\n          </div>\n          <h3 className=\"card-title\">Overview</h3>\n          <p className=\"card-text\">{props.movie.overview}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","import React from \"react\";\n\nconst Cast = props => {\n  return (\n    <ul className=\"list-group list-group-horizontal\">\n      {props.credits.crew\n        ? props.credits.cast.map(obj => (\n            <li className=\"list-group-item border-0 text-center\" key={obj.id}>\n              <img\n                className=\"cast-photo rounded\"\n                src={`https://image.tmdb.org/t/p/w500${obj.profile_path}`}\n                alt={obj.name}\n              />\n              <b>{obj.name}</b>\n            </li>\n          ))\n        : null}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import React from \"react\";\n\nconst Video = props => {\n  return (\n    <div className=\"embed-responsive embed-responsive-16by9\">\n      <iframe\n        className=\"embed-responsive-item\"\n        src={`https://www.youtube.com/embed/${props.video.key}`}\n        allowFullScreen\n        title={props.video.id}\n      />\n    </div>\n  );\n};\n\nexport default Video;\n","import React, { useState, useEffect } from \"react\";\nimport { API_KEY_3 } from \"../utils/api\";\nimport MovieInfo from \"./MovieInfo\";\nimport Cast from \"./Cast\";\nimport Video from \"./Video\";\n\nconst MovieDetails = props => {\n  const [movie, setMovie] = useState({ id: props.match.params.id });\n  const [credits, setCredits] = useState({});\n  const [video, setVideo] = useState({});\n\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=${API_KEY_3}`)\n      .then(response => response.json())\n      .then(data => {\n        setMovie(data);\n      })\n      .catch(err =>\n        console.error(\"Error getting details information\", err.stack)\n      );\n  }, [movie]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${\n        movie.id\n      }/credits?api_key=${API_KEY_3}`\n    )\n      .then(response => response.json())\n      .then(data => {\n        setCredits(data);\n      })\n      .catch(err =>\n        console.error(\"Error getting credits information\", err.stack)\n      );\n  }, [credits]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${\n        movie.id\n      }/videos?api_key=${API_KEY_3}&language=en-US`\n    )\n      .then(response => response.json())\n      .then(data => {\n        setVideo(data.results[0]);\n      })\n      .catch(err =>\n        console.error(\"Error getting video information\", err.stack)\n      );\n  }, [video]);\n\n  return (\n    <div>\n      <div className=\"d-flex flex-row justify-content-center bg-info my-4 text-white\">\n        <div className=\"card m-4 p-3 col-md-8 border-0 bg-info \">\n          <MovieInfo movie={movie} />\n        </div>\n      </div>\n      <div className=\"d-flex flex-row justify-content-center my-4 \">\n        <div className=\"col-md-10 scroll\">\n          <Cast credits={credits} />\n        </div>\n      </div>\n      <div className=\"d-flex flex-row justify-content-center my-4 \">\n        <div className=\"col-8\">\n          <Video video={video} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React from \"react\";\n\nconst Menu = () => {\n  return (\n    <div className=\"d-flex flex-row justify-content-center bg-dark \">\n      <nav className=\"navbar navbar-light   col-10\">\n        <a className=\"navbar-brand text-white\" href=\"/\">\n          <h1>Movies</h1>\n        </a>\n      </nav>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport MovieDetails from \"./components/MovieDetails\";\nimport Menu from \"./components/Menu\";\n\nwindow.React = React;\n\nconst App = () => (\n  <HashRouter>\n    <Menu />\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/:id\" component={MovieDetails} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}